set nocompatible

nnoremap <SPACE> <NOP>
let mapleader=" "

if has('nvim')
  call plug#begin('~/.vim/nplugged')
else
  call plug#begin('~/.vim/plugged')
endif

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-vinegar'

Plug 'junegunn/vim-easy-align'
Plug 'junegunn/limelight.vim'
Plug 'junegunn/vim-peekaboo'
Plug 'junegunn/vim-emoji'
Plug 'junegunn/vim-pseudocl' | Plug 'junegunn/vim-oblique'

Plug 'airblade/vim-gitgutter'

Plug 'hylang/vim-hy'

Plug 'tpope/vim-speeddating' | Plug 'vim-scripts/SyntaxRange' | Plug 'jceb/vim-orgmode'

Plug 'Shougo/unite.vim'	| Plug 'tsukkee/unite-tag'
Plug 'Shougo/neoinclude.vim'
Plug 'vim-ctrlspace/vim-ctrlspace'
Plug 'Shougo/unite.vim'	| Plug 'tsukkee/unite-help'

if has('nvim')
	function! DoRemote(arg)
		UpdateRemotePlugins
	endfunction
	Plug 'Shougo/deoplete.nvim', {'do': function('DoRemote')}
	let g:deoplete#enable_at_startup = 1
else
	Plug 'Shougo/neocomplete.vim'
endif

Plug 'xolox/vim-misc' | Plug 'xolox/vim-easytags'

Plug 'NLKNguyen/papercolor-theme'

Plug 'vim-airline/vim-airline' | Plug 'vim-airline/vim-airline-themes'

Plug 'farseer90718/vim-taskwarrior'

call plug#end()

colorscheme PaperColor
set expandtab
set smarttab
set shiftwidth   =2
set tabstop      =2
set softtabstop  =0
set hidden
set completefunc+=emoji#complete

let g:airline_theme                           = 'PaperColor'
let g:airline_powerline_fonts                 = 1
let g:airline#extensions#tabline#enabled      = 1
let g:airline#extensions#tabline#left_sep     = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#right_sep    = ''
let g:airline#extensions#tabline#righ_alt_sep = ''
let g:airline_left_sep                        = ''
let g:airline_left_alt_sep                    = ''
let g:airline_right_sep                       = ''
let g:airline_right_alt_sep                   = ''

let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240
let g:limelight_conceal_guifg   = 'DarkGray'
let g:limelight_conceal_guifg   = '#777777'

let g:gitgutter_highlight_lines         = 1

let s:mappings_loaded=0
function! LoadMappings()
  if s:mappings_loaded==0
    xmap ga <Plug>(EasyAlign)
    nmap ga <Plug>(EasyAlign)
    nnoremap <silent> <LEADER>EE :%s/:\([^:]\+\):/\=emoji#for(submatch(1), submatch(0))/g<CR>:nohl<CR>
    nnoremap <silent> <LEADER>an :set number!<CR>
    nnoremap <silent> <LEADER>ar :set relativenumber!<CR>
    nnoremap <silent> <LEADER>al :Limelight!!<CR>
    nnoremap <silent> <LEADER>ag :GitGutterToggle<CR>
    nnoremap <silent> <LEADER>tt :Unite tag<CR>
    nnoremap <silent> <LEADER>tf :Unite tag/file<CR>
    nnoremap <silent> <LEADER>ti :Unite tag/include<CR>
    nnoremap <silent> <LEADER>t/ :Unite tag:/
    nnoremap <silent> <LEADER>bb :Unite buffer_tab<CR>
    nnoremap <silent> <LEADER>bn :bnext<CR>
    nnoremap <silent> <LEADER>bp :bprev<CR>
    nnoremap <silent> <LEADER>bd :bd<CR>
    nnoremap <silent> <LEADER>h/ :Unite help<CR>i
    nnoremap <silent> <LEADER>hh "0yiw:Unite help<CR>"0p
    vnoremap <silent> <LEADER>h  "0y:Unite help<CR>"0p
    nnoremap <silent> <LEADER>gs :Gstatus<CR>
    nnoremap <silent> <LEADER>gb :Gblame<CR>
    nnoremap <silent> <LEADER>gp :Gpull<CR>
    nnoremap <silent> <LEADER>gP :Gpush<CR>
    nnoremap <silent> <LEADER>gl :Glog<CR>
    nnoremap <silent> <LEADER>gc :Gcommit<CR>
    nnoremap <silent> <LEADER>TW :TW<CR>

    if has('nvim')
      nnoremap <silent> <LEADER>e :Unite -start-insert file_rec/neovim<CR>
    else
      nnoremap <silent> <LEADER>e :Unite -start-insert file_rec<CR>
    endif

    nnoremap <silent> <LEADER>ve :split ~/.vim/vimrc<CR>
    nnoremap <silent> <LEADER>vs :source ~/.vim/vimrc<CR>:echo "reloaded vimrc"<CR>
    nnoremap <silent> <LEADER>vrm :call ReloadMappings()<CR>:echo "reloaded vimrc and mappings"<CR>

    let s:mappings_loaded=1
  endif 
endfunction

if ! exists("s:define_once")
  function! ReloadMappings()
    let s:mappings_loaded=0
    source ~/.vim/vimrc
    call LoadMappings()
  endfunction
  let s:define_once=1
endif

call LoadMappings()
